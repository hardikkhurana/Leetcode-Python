        
        n,m = len(board) , len(board[0])

        for word in words:
            root.addWord(word)
        

    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:
        root = TrieNode()

        curr.word=True

class Solution:
            if w not in curr.children:
                curr.children[w] = TrieNode()
            curr = curr.children[w]
    def addWord(self,word):
        curr = self
        for w in word:
        self.children = {}
        self.word = False
    
class TrieNode:
    def __init__(self):
[["o","a","a","n"],["e","t","a","e"],["i","h","k","r"],["i","f","l","v"]]
