[
            if i==len(word):
            s.add((r,c))
            s.remove((r,c))
            res=dfs(r+1,c,i+1) or dfs(r-1,c,i+1) or dfs(r,c+1,i+1) or dfs(r,
                word[i]!=board[r][c] or i>len(word) or (r,c) in s):
                return False
            return res
        
            for k in range(col):
                return True
                r>=row or c>=col or
            if (r<0 or c<0 or
        for j in range(row):
                if dfs(j,k,0):
        def dfs(r,c,i):
        return False
        
        row,col=len(board),len(board[0])
                    return True
    def exist(self, board: List[List[str]], word: str) -> bool:
        s=set()
c-1,i+1)
class Solution:
